{
  "contractName": "IERC20CustomUpgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decrement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_setText",
          "type": "string"
        }
      ],
      "name": "setText",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getText",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getText\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_setText\",\"type\":\"string\"}],\"name\":\"setText\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IERC20CustomUpgradeable.sol\":\"IERC20CustomUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"project:/contracts/interfaces/IERC20CustomUpgradeable.sol\":{\"keccak256\":\"0x9d2862c91e1a61bf1826ee77bca09d84a611b6cb4eb92d34d9a2d81274e34da2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4c52abfa59763dd9fabfdc7f610ca7ccbb2327a32910eb4e9be399bfb1f3ae\",\"dweb:/ipfs/QmWFgv4QrBtWgeaTRV4pidGwmr9Ev75E6YsDC2ThYWN4E5\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol\";\n\ninterface IERC20CustomUpgradeable is IERC20Upgradeable {\n    function initialize() external;\n\n    function increment() external;\n    function decrement() external;\n    function getCount() external;\n    function setText(string memory _setText) external;\n    function getText() external;\n    // function setURI(string memory newuri) external;\n}\n",
  "sourcePath": "/Users/pinkyjain/Downloads/BLOCKCHAIN/truffle-upgradable-proxypatterns/contracts/interfaces/IERC20CustomUpgradeable.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IERC20CustomUpgradeable.sol",
    "exportedSymbols": {
      "IERC20CustomUpgradeable": [
        2013
      ],
      "IERC20Upgradeable": [
        1416
      ]
    },
    "id": 2014,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1989,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:16"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol",
        "id": 1990,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2014,
        "sourceUnit": 127,
        "src": "59:78:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1991,
              "name": "IERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1416,
              "src": "176:17:16"
            },
            "id": 1992,
            "nodeType": "InheritanceSpecifier",
            "src": "176:17:16"
          }
        ],
        "canonicalName": "IERC20CustomUpgradeable",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2013,
        "linearizedBaseContracts": [
          2013,
          1416
        ],
        "name": "IERC20CustomUpgradeable",
        "nameLocation": "149:23:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8129fc1c",
            "id": 1995,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "209:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "219:2:16"
            },
            "returnParameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "230:0:16"
            },
            "scope": 2013,
            "src": "200:31:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d09de08a",
            "id": 1998,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "246:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:2:16"
            },
            "returnParameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:16"
            },
            "scope": 2013,
            "src": "237:30:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2baeceb7",
            "id": 2001,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "281:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:2:16"
            },
            "returnParameters": {
              "id": 2000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:16"
            },
            "scope": 2013,
            "src": "272:30:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a87d942c",
            "id": 2004,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCount",
            "nameLocation": "316:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:2:16"
            },
            "returnParameters": {
              "id": 2003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:16"
            },
            "scope": 2013,
            "src": "307:29:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "5d3a1f9d",
            "id": 2009,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setText",
            "nameLocation": "350:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "_setText",
                  "nameLocation": "372:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2009,
                  "src": "358:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "357:24:16"
            },
            "returnParameters": {
              "id": 2008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "390:0:16"
            },
            "scope": 2013,
            "src": "341:50:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "e00fe2eb",
            "id": 2012,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getText",
            "nameLocation": "405:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:2:16"
            },
            "returnParameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:16"
            },
            "scope": 2013,
            "src": "396:28:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2014,
        "src": "139:342:16",
        "usedErrors": []
      }
    ],
    "src": "33:449:16"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/interfaces/IERC20CustomUpgradeable.sol",
    "exportedSymbols": {
      "IERC20CustomUpgradeable": [
        2013
      ],
      "IERC20Upgradeable": [
        1416
      ]
    },
    "id": 2014,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1989,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:16"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol",
        "id": 1990,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2014,
        "sourceUnit": 127,
        "src": "59:78:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1991,
              "name": "IERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1416,
              "src": "176:17:16"
            },
            "id": 1992,
            "nodeType": "InheritanceSpecifier",
            "src": "176:17:16"
          }
        ],
        "canonicalName": "IERC20CustomUpgradeable",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2013,
        "linearizedBaseContracts": [
          2013,
          1416
        ],
        "name": "IERC20CustomUpgradeable",
        "nameLocation": "149:23:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8129fc1c",
            "id": 1995,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "209:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "219:2:16"
            },
            "returnParameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "230:0:16"
            },
            "scope": 2013,
            "src": "200:31:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d09de08a",
            "id": 1998,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "246:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:2:16"
            },
            "returnParameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:16"
            },
            "scope": 2013,
            "src": "237:30:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2baeceb7",
            "id": 2001,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "281:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:2:16"
            },
            "returnParameters": {
              "id": 2000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:16"
            },
            "scope": 2013,
            "src": "272:30:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a87d942c",
            "id": 2004,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCount",
            "nameLocation": "316:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:2:16"
            },
            "returnParameters": {
              "id": 2003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:16"
            },
            "scope": 2013,
            "src": "307:29:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "5d3a1f9d",
            "id": 2009,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setText",
            "nameLocation": "350:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "_setText",
                  "nameLocation": "372:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2009,
                  "src": "358:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "357:24:16"
            },
            "returnParameters": {
              "id": 2008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "390:0:16"
            },
            "scope": 2013,
            "src": "341:50:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "e00fe2eb",
            "id": 2012,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getText",
            "nameLocation": "405:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:2:16"
            },
            "returnParameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:16"
            },
            "scope": 2013,
            "src": "396:28:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2014,
        "src": "139:342:16",
        "usedErrors": []
      }
    ],
    "src": "33:449:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.12+commit.f00d7308.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-03-05T11:19:01.866Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}